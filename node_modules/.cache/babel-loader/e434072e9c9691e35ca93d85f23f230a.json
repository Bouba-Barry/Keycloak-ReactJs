{"ast":null,"code":"var _jsxFileName = \"/home/barry/JsWorkspace/ReactWorkspace/frontend-react/src/components/AppContent.js\";\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getUser, login, logout } from '../helpers/auth_helper';\nimport { Link, Routes, Route } from 'react-router-dom';\nimport AuthContent from './AuthContent';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport LoginComponent from './LoginComponent';\nimport LogoutComponent from './LogoutComponent';\n\nconst AppContent = () => {\n  const [user, setUser] = useState({});\n  const [shouldCancel, setShouldCancel] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentPage, setCurrentPage] = useState();\n  useEffect(() => {\n    const path = window.location.pathname;\n    setCurrentPage(path.slice(1, path.length));\n  }, []); // ...\n\n  useEffect(() => {\n    let isMounted = true;\n    getUser().then(user => {\n      if (user) {\n        toast.success('User has been successfully loaded from store.');\n      } else {\n        toast.info('You are not logged in.');\n      }\n\n      if (isMounted && !shouldCancel) {\n        setUser(user);\n      }\n    });\n    return () => {\n      // Clean up code\n      // Will be called when the component unmounts\n      // Set shouldCancel to true to cancel any ongoing asynchronous tasks\n      setShouldCancel(true);\n      isMounted = false;\n    };\n  }, [shouldCancel]); // ...\n\n  const handleLogin = () => {\n    login();\n  };\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"m-1 p-1 border border-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"nav na-pills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, isLoggedIn ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setCurrentPage(\"/logout\");\n    },\n    className: currentPage === '/logout' ? 'btn btn-info ms-1 p-1' : 'ms-1 p-1 btn btn-outline-primary',\n    to: \"/logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setCurrentPage(\"/backendApi\");\n    },\n    className: currentPage === '/backendApi' ? 'btn btn-info ms-1' : 'ms-1 btn btn-outline-primary',\n    to: \"/backendApi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Protected Backend\"))) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link // onClick={() => {setCurrentPage(\"/login\")}}\n  , {\n    className: \"ms-1 btn btn-outline-primary\",\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Login\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/backendApi\",\n    element: /*#__PURE__*/React.createElement(AuthContent, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 54\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    element: /*#__PURE__*/React.createElement(LoginComponent, {\n      onLogin: handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/logout\",\n    element: /*#__PURE__*/React.createElement(LogoutComponent, {\n      onLogout: handleLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 50\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }))));\n};\n\nexport default AppContent;","map":{"version":3,"sources":["/home/barry/JsWorkspace/ReactWorkspace/frontend-react/src/components/AppContent.js"],"names":["React","useState","useEffect","ToastContainer","toast","getUser","login","logout","Link","Routes","Route","AuthContent","BrowserRouter","App","LoginComponent","LogoutComponent","AppContent","user","setUser","shouldCancel","setShouldCancel","isLoggedIn","setIsLoggedIn","currentPage","setCurrentPage","path","window","location","pathname","slice","length","isMounted","then","success","info","handleLogin","handleLogout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getUser, login, logout } from '../helpers/auth_helper';\nimport { Link, Routes, Route } from 'react-router-dom';\n\nimport AuthContent from './AuthContent';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport LoginComponent from './LoginComponent';\nimport LogoutComponent from './LogoutComponent';\n\nconst AppContent = () => {\n    const [user, setUser] = useState({});\n    const [shouldCancel, setShouldCancel] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    \n    const [currentPage, setCurrentPage] = useState();\n    useEffect(()=>{\n        const path = window.location.pathname;\n        setCurrentPage(path.slice(1, path.length));\n    },[]);\n    // ...\n\n    useEffect(() => {\n      let isMounted = true;\n    \n      getUser().then(user => {\n        if (user) {\n          toast.success('User has been successfully loaded from store.');\n        } else {\n          toast.info('You are not logged in.');\n        }\n    \n        if (isMounted && !shouldCancel) {\n          setUser(user);\n        }\n      });\n    \n      return () => {\n        // Clean up code\n        // Will be called when the component unmounts\n        // Set shouldCancel to true to cancel any ongoing asynchronous tasks\n        setShouldCancel(true);\n        isMounted = false;\n      };\n    }, [shouldCancel]);\n  \n  // ...\n  \n  \n    const handleLogin = () => {\n      login();\n    };\n  \n    const handleLogout = () => {\n      logout();\n    };\n  \n    return (\n      <BrowserRouter>\n        <ToastContainer />\n        <nav className='m-1 p-1 border border-info'>\n  <ul className='nav na-pills'>\n    {/* <li>\n      <Link\n        onClick={() => {setCurrentPage(\"/\")}}\n        className={currentPage==='/'?'btn btn-info ms-1':'ms-1 btn btn-outline-primary'}\n        to={\"/\"}\n      >\n        Home\n      </Link>\n    </li> */}\n    {isLoggedIn ? (\n            <>\n            <li>\n              <Link\n                onClick={() => {setCurrentPage(\"/logout\")}}\n                className={currentPage==='/logout'?'btn btn-info ms-1 p-1':'ms-1 p-1 btn btn-outline-primary'}\n                to={\"/logout\"}\n              >\n                Logout\n              </Link>\n            </li>\n            <li>\n              <Link\n                onClick={() => {setCurrentPage(\"/backendApi\")}}\n                className={currentPage==='/backendApi'?'btn btn-info ms-1':'ms-1 btn btn-outline-primary'}\n                to={\"/backendApi\"}\n              >\n                Protected Backend\n              </Link>\n            </li>\n          </>\n      \n    ) : (\n      <li>\n        <Link\n          // onClick={() => {setCurrentPage(\"/login\")}}\n          className='ms-1 btn btn-outline-primary'\n          to={\"/login\"}\n        >\n          Login\n        </Link>\n      </li>\n    )}\n  </ul>\n</nav>\n\n            <div className='menu'>\n              <Routes>\n                  {/* <Route path='/' element={<App/>}></Route> */}\n                  <Route path='/backendApi' element={<AuthContent user={user}/>}></Route>\n                  <Route path='/login' element={<LoginComponent onLogin={handleLogin} />} />\n                  <Route path='/logout' element={<LogoutComponent onLogout={handleLogout} />} />\n              </Routes>\n            </div>\n  \n      </BrowserRouter>\n    );\n  };\n  \nexport default AppContent;\n  \n"]},"metadata":{},"sourceType":"module"}